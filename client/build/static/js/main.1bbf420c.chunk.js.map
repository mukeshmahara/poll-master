{"version":3,"sources":["assets/pollmaster-logo.svg","assets/loading.gif","assets/404.svg","assets/PageNotFound.svg","components/Navbar.js","components/Question.js","components/Option.js","components/OptionSec.js","components/VotedItem.js","components/VoteSec.js","components/LoadingVote.js","components/PollContainer.js","components/Error404.js","components/Container.js","components/main.js","components/CreatePoll.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","exact","src","logo","alt","title","type","disabled","Question","props","question","Option","handleClick","handleVote","optionId","this","option","key","onClick","React","Component","OptionSec","toggleLoadVoting","newOptions","options","map","_id","votes","updatedPoll","axios","post","pollId","then","res","console","log","data","displayVotingPercentage","state","displayBtn","bind","setState","VotedItem","width","style","background","height","padding","margin","position","paddingLeft","Number","toFixed","VotedSec","calculateWidth","totalVote","get","response","__v","LoadingVote","loadingGIF","PollContainer","voted","prevState","loading","VoteSec","id","Error404","svg404","Container","polls","catch","err","length","poll","Main","CreatePoll","handleQuestionInput","event","target","value","handleOptionInput","index","optId","handleAddOption","concat","handleRemoveOption","filter","opt","error","setTimeout","onSubmit","e","preventDefault","window","location","htmlFor","name","onChange","placeholder","required","class","NotFound","PageNotFound","App","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bbf420c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pollmaster-logo.a3a70aba.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.a69fcf6e.gif\";","module.exports = __webpack_public_path__ + \"static/media/404.6695af99.svg\";","module.exports = __webpack_public_path__ + \"static/media/PageNotFound.8da3f613.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport logo from '../assets/pollmaster-logo.svg';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <NavLink to=\"/\" exact className=\"navbar-brand text-light\"><img src={logo} alt=\"Logo\" className=\"logo\" />Poll Master</NavLink>\r\n                <ul className=\"navbar-nav ml-auto pr-5\">\r\n                    <li className=\"nav-item active\">\r\n                        <NavLink to=\"/create\" className=\"nav-link text-light\" title=\"Create a Poll\">Create</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"form-inline\">\r\n                    <button className=\"btn btn-outline-light my-2 my-sm-0 \" type=\"submit\" title=\"Sorry, it's under construction, Sign in Functionality to be added in the future\" disabled>Sign In</button>\r\n                </form>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Question = (props) => { \r\n    return (\r\n        <h6 className=\"question\">\r\n            {props.question}\r\n        </h6>\r\n    );\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nclass Option extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handleVote(this.props.optionId)\r\n    }\r\n    render() {\r\n        const { option, optionId } = this.props;\r\n\r\n        return( \r\n            <div key={optionId} className=\"option\" onClick={this.handleClick}>\r\n                {/* {console.log(votes,'votes')} */}\r\n                {option}\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Option;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Option from './Option';\r\n\r\n\r\nclass OptionSec extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            displayBtn: false\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n\r\n    handleClick () {\r\n        this.setState({\r\n            displayBtn: true\r\n        })\r\n    }\r\n\r\n    handleVote = (optionId) => {\r\n        this.props.toggleLoadVoting()\r\n        let newOptions = this.props.options.map( (option) => {\r\n            if(option._id === optionId) {\r\n                option.votes++\r\n            }\r\n            return option;\r\n        });\r\n        // console.log(newOptions)\r\n        let updatedPoll = {\r\n            question: this.props.question,\r\n            options: newOptions\r\n        }\r\n        // console.log(votedOption, 'found')\r\n        // console.log(this.props.pollId)\r\n        axios.post('http://localhost:5500/poll/vote/'+this.props.pollId, updatedPoll)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.props.toggleLoadVoting();\r\n                this.props.displayVotingPercentage();\r\n            });\r\n    }\r\n\r\n\r\n\r\n\trender() {\r\n        return (\r\n            <div className=\"options\" >\r\n                {/* {console.log(this.props.options, 'optsec')} */}\r\n                <div>\r\n                {\r\n                    this.props.options.map( (option) => {\r\n                        return (\r\n                            <Option \r\n                                option={option.option}\r\n                                optionId={option._id} \r\n                                key={option._id} \r\n                                handleVote={this.handleVote} \r\n                            />\r\n                        )\r\n                    } )\r\n                }\r\n                </div>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionSec;","import React from 'react';\r\n\r\nconst VotedItem = (props) => {\r\n\r\n        const { option, optionId, width } = props;\r\n        const style ={\r\n            background: \"rgba(38,83,175,0.7)\" , height: '100%',padding: '0', margin: '0', width: `${width}%`, position: 'absolute'\r\n        }\r\n        return( \r\n            <div key={optionId} className=\"voteItem\" style={{position: \"relative\"}}>\r\n                <div style={style}>\r\n                </div>\r\n                <span style={{paddingLeft: '0.5rem'}}>{Number((width).toFixed(2))}% {option}</span>\r\n\r\n            </div> \r\n        )\r\n    \r\n}\r\n\r\nexport default VotedItem;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport VotedItem from './VotedItem';\r\n\r\n\r\nclass VotedSec extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: [],\r\n            totalVote: 0,\r\n        }\r\n    }\r\n    calculateWidth = (votes) => {\r\n        let width = ((votes / this.state.totalVote) * 100);\r\n        return width;\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5500/poll/'+this.props.pollId)\r\n            .then(response => {\r\n                // console.log(response.data.__v, 'totalVote')\r\n                \r\n                this.setState({\r\n                    options: response.data.options,\r\n                    totalVote: response.data.__v,\r\n                })\r\n            }\r\n        )\r\n    }\r\n\trender() {\r\n        return (\r\n            <div className=\"options\" >\r\n                {/* {console.log(this.props.options, 'optsec')} */}\r\n                <div>\r\n                {\r\n                    this.state.options.map( (option) => {\r\n                        return (\r\n                            <VotedItem \r\n                                key={option._id} \r\n                                option={option.option}\r\n                                optionId={option._id} \r\n                                votes={option.votes}\r\n                                width = {this.calculateWidth(option.votes)}\r\n                            />\r\n                        )\r\n                    } )\r\n                }\r\n                </div>\r\n                <div>\r\n                    <small className=\"text-secondary votedinfo\">{this.state.totalVote} votes</small>\r\n                </div>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VotedSec;","import React from 'react';\r\n\r\nimport loadingGIF from '../assets/loading.gif'\r\n\r\nconst LoadingVote = () => {\r\n    \r\n        return (\r\n            <div className=\"options loadingComp\" >\r\n                \r\n                <img src={loadingGIF} className=\"loadingGIF\" alt=\"loading...\" />\r\n                <em>Voting in progress</em>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default LoadingVote;","import React from 'react';\r\n\r\n\r\nimport Question from './Question';\r\nimport OptionSec from './OptionSec';\r\nimport VoteSec from './VoteSec';\r\nimport LoadingVote from './LoadingVote';\r\n\r\n\r\nclass PollContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            voted: false,\r\n            loading: false\r\n        }\r\n    }\r\n    displayVotingPercentage = () => {\r\n        this.setState({\r\n            voted: true\r\n        })\r\n    }\r\n\r\n    toggleLoadVoting = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                loading: !prevState.loading\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 col-sm-6 col-md-4  containerBox mb-4 d-flex justify-content-center align-item-stretch\">\r\n                <div className=\"container border text-center p-2\">\r\n                    <Question question={this.props.question} />\r\n                    <hr />\r\n                    {\r\n                        (this.state.loading)?\r\n                            <LoadingVote />\r\n                            :\r\n                            (this.state.voted)?\r\n                                <VoteSec\r\n                                    pollId= {this.props.id}  \r\n                                />\r\n                            :\r\n                            <OptionSec \r\n                                pollId= {this.props.id} \r\n                                options={this.props.options} \r\n                                question={this.props.question} \r\n                                displayVotingPercentage={this.displayVotingPercentage} \r\n                                toggleLoadVoting = {this.toggleLoadVoting}\r\n                            />\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PollContainer;","import React from 'react';\r\n\r\nimport svg404 from '../assets/404.svg';\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div className=\"m-auto\">\r\n            <span className=\" d-flex justify-content-center\">\r\n                <img src={svg404} alt=\"screen Cleaning\" className=\"error404\" />\r\n            </span>\r\n            <p className=\"loadingTxt text-center\"><em>OOPS! No Polls Found. <br />Sorry!</em></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nimport PollContainer from './PollContainer';\r\nimport Error404 from './Error404';\r\n\r\nclass Container extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            polls: []\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        axios.get('http://localhost:5500/poll/')\r\n            .then (response => {\r\n                this.setState({ polls: response.data })\r\n            })\r\n            .catch ( (err) => { console.log(err) })\r\n    }\r\n    render() {\r\n        // console.log(this.state.polls)\r\n    return (\r\n        <div className=\"ContainerSec\">\r\n\r\n            <div className=\"text-center pt-3\">\r\n                {/* Home \r\n                Trending \r\n                Voted  */}\r\n                <h1 className=\"heading\">Polls</h1>\r\n            </div>\r\n            <hr />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {\r\n                        ( this.state.polls.length === 0 )?\r\n                            <Error404 />\r\n                        :\r\n                            this.state.polls.map(poll => {\r\n                                // console.log(poll)\r\n                                return(\r\n                                    <PollContainer key={poll._id} id={poll._id} question={poll.question} options={poll.options} />\r\n                                )\r\n                            })\r\n                    }\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n    }\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n\r\nimport Navbar from './Navbar';\r\nimport Container from './Container';\r\n\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <Navbar />\r\n                <Container />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Navbar from './Navbar';\r\n\r\nclass CreatePoll extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question: '',\r\n            options: [\r\n                {option: '', votes: 0},\r\n                {option: '', votes: 0},\r\n                {option: '', votes: 0}\r\n            ],\r\n            error: ''\r\n\r\n        }\r\n    }\r\n\r\n    handleQuestionInput = (event) => {\r\n        this.setState({\r\n            question: event.target.value\r\n        });\r\n    }\r\n\r\n    handleOptionInput = (index) => (event) => {\r\n        const newOptions = this.state.options.map((option, optId) => {\r\n          if (index !== optId) return option;\r\n          return { ...option, option: event.target.value };\r\n        });\r\n    \r\n        this.setState({ options: newOptions });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        this.setState({\r\n          options: this.state.options.concat([{ option: \"\", votes: 0 }])\r\n        });\r\n    };\r\n\r\n    handleRemoveOption = index => () => {\r\n        console.log(this.state.options.length)\r\n        if( this.state.options.length >= 3 ) {\r\n            this.setState({\r\n                options: this.state.options.filter((opt, optId) => index !== optId)\r\n              });\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: 'You need atleast Two Options for the poll'\r\n            })\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    error: ''\r\n                })\r\n            },5000)\r\n        }\r\n\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const poll = {\r\n            question: this.state.question,\r\n            options: this.state.options,\r\n        }\r\n\r\n        axios.post('http://localhost:5500/poll/add', poll)\r\n            .then(res => console.log(res.data));\r\n\r\n        console.log(poll);\r\n\r\n\r\n        window.location = '/'; //Take the user back to home page '/'\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <Navbar />\r\n\r\n                <div className=\"ContainerSec px-5 py-4\">\r\n                    <h1 className=\"text-center heading\">Create A Poll</h1>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"pollQuestion\" className=\"heading\">Question:</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"question\" id=\"pollQuestion\" value={this.state.question} onChange={this.handleQuestionInput} placeholder=\"Enter your Poll Question\" required />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"heading\">Options:</label>\r\n                            {\r\n                                this.state.options.map((option, index) => (\r\n                                    // className=\"form-inline\"\r\n                                    <div key={index} className=\"form-inline mx-sm-3 mb-2\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder={`Option #${index + 1}`}\r\n                                            value={option.name}\r\n                                            onChange={this.handleOptionInput(index)}\r\n                                            required\r\n\r\n                                        />\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={this.handleRemoveOption(index)}\r\n                                            className=\"fonticons text-danger\"\r\n                                        >\r\n                                        <i class=\"fas fa-minus-circle\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.handleAddOption}\r\n                                className=\"btn btn-link text-decoration-none\"\r\n                                >\r\n                                <i className=\"fas fa-plus-circle\"></i> Add Option\r\n                            </button>\r\n                            \r\n                            {\r\n                                this.state.error ? \r\n                                    <div className=\"alert alert-danger\">\r\n                                        {this.state.error}\r\n                                    </div>\r\n                                :\r\n                                    ''\r\n                            }\r\n\r\n                        </div>\r\n                        <input className=\"btn btn-primary mt-4\" type=\"submit\" value=\"Add Poll\" />\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatePoll;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Navbar from './Navbar';\r\nimport PageNotFound from '../assets/PageNotFound.svg';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <Navbar />\r\n        <div>\r\n            <h1 className=\"text-center mt-4 heading mb-3\">Error 404</h1>\r\n        </div>\r\n        <div className=\"m-auto\">\r\n            <span className=\" d-flex justify-content-center\">\r\n                <img src={PageNotFound} alt=\"screen Cleaning\" className=\"error404\" />\r\n            </span>\r\n            <p className=\"loadingTxt text-center mt-3\"><em>This is not the page you are looking for.</em></p>\r\n            <p className=\"loadingTxt text-center mt-3\"><em>Go back <Link to=\"/\">home</Link></em></p>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n);\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Main from './components/main';\r\nimport CreatePoll from './components/CreatePoll';\r\nimport NotFound from './components/NotFound';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Main}/>\r\n        <Route path=\"/create\" exact component={CreatePoll}/>\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}